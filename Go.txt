Keywords:
----------------------------------------
break
cap
case
	chan
copy
const
continue
	close
default
defer
delete
else
error
fallthrough
for
func
	go
	goto
if
import
init					func init() {}
	interface
make					m := make([]int, 50, 100)		m := new([capacity]int)[0:length]
mane					func main() {}
map						var m map[string]int		m := make(map[string][]int)		m := map[string]int{}
new
len
package
range
return
	select
struct					var v Struct		v := Struct{}		v := new(Struct)
switch
type
var

Operators and punctuation:
----------------------------------------
+
-
*
/
%
&
|
^
<<
>>
&^
+=
-=
*=
/=
%=
&=
|=
^=
<<=
>>=
&^=
&&
||
<-
++
--
==
<
>
=
!
!=
<=
>=
:=
...
(
)
[
]
{
}
,
.
;
:

Rune literals
----------------------------------------
\a   U+0007 alert or bell
\b   U+0008 backspace
\f   U+000C form feed
\n   U+000A line feed or newline
\r   U+000D carriage return
\t   U+0009 horizontal tab
\v   U+000b vertical tab
\\   U+005c backslash
\'   U+0027 single quote  (valid escape only within rune literals)
\"   U+0022 double quote  (valid escape only within string literals)

rune_lit         = "'" ( unicode_value | byte_value ) "'"
unicode_value    = unicode_char | little_u_value | big_u_value | escaped_char
byte_value       = octal_byte_value | hex_byte_value
octal_byte_value = `\` octal_digit octal_digit octal_digit
hex_byte_value   = `\` "x" hex_digit hex_digit
little_u_value   = `\` "u" hex_digit hex_digit hex_digit hex_digit
big_u_value      = `\` "U" hex_digit hex_digit hex_digit hex_digit
                           hex_digit hex_digit hex_digit hex_digit
escaped_char     = `\` ( "a" | "b" | "f" | "n" | "r" | "t" | "v" | `\` | "'" | `"` )

Numeric types
----------------------------------------
uint8       the set of all unsigned  8-bit integers (0 to 255)
uint16      the set of all unsigned 16-bit integers (0 to 65535)
uint32      the set of all unsigned 32-bit integers (0 to 4294967295)
uint64      the set of all unsigned 64-bit integers (0 to 18446744073709551615)

int8        the set of all signed  8-bit integers (-128 to 127)
int16       the set of all signed 16-bit integers (-32768 to 32767)
int32       the set of all signed 32-bit integers (-2147483648 to 2147483647)
int64       the set of all signed 64-bit integers (-9223372036854775808 to 9223372036854775807)

float32     the set of all IEEE-754 32-bit floating-point numbers
float64     the set of all IEEE-754 64-bit floating-point numbers

complex64   the set of all complex numbers with float32 real and imaginary parts
complex128  the set of all complex numbers with float64 real and imaginary parts

byte        alias for uint8
rune        alias for int32


















